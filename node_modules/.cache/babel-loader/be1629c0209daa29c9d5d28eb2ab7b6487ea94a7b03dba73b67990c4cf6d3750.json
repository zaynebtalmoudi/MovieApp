{"ast":null,"code":"var _jsxFileName = \"/Users/zayneb/Documents/GoMyCode/ChPt5_React_Hooks(movieApp)/movies/src/FiltredList.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport CardsList from './CardsList';\nimport Card from './CardsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FiltredList(props) {\n  _s();\n  const [filtered, setFiltered] = React.useState(props.listToFilter);\n  const Filter = event => {\n    if (event.target.name === 'Title') {\n      setFiltered(props.listToFilter.filter(f => f.movieTitle.toLowerCase().includes(event.target.value)));\n    } else if (event.target.name === 'Rate') {\n      setFiltered(props.listToFilter.filter(f => f.movieRate.includes(event.target.value)));\n    }\n  }; ////////////////////// Filter End////////////////////\n\n  const cardsList = filtered.map(card => /*#__PURE__*/_jsxDEV(Card, {\n    id: card.movieId,\n    title: card.movieTitle,\n    description: card.movieDescription,\n    rate: card.movieRate,\n    image: card.movieImage,\n    trailer: card.movieTrailer\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this));\n  return {\n    cardsList\n  };\n}\n_s(FiltredList, \"vgmohQ3aQbo4yGmH6zizXo0vFRw=\");\n_c = FiltredList;\nvar _c;\n$RefreshReg$(_c, \"FiltredList\");","map":{"version":3,"names":["React","CardsList","Card","jsxDEV","_jsxDEV","FiltredList","props","_s","filtered","setFiltered","useState","listToFilter","Filter","event","target","name","filter","f","movieTitle","toLowerCase","includes","value","movieRate","cardsList","map","card","id","movieId","title","description","movieDescription","rate","image","movieImage","trailer","movieTrailer","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zayneb/Documents/GoMyCode/ChPt5_React_Hooks(movieApp)/movies/src/FiltredList.js"],"sourcesContent":["import React from 'react'\nimport CardsList from './CardsList'\nimport Card from './CardsList'\n\nexport default function FiltredList(props) {\n    const [filtered, setFiltered] = React.useState(props.listToFilter)\n\n    const Filter = (event) => {\n        if (event.target.name === 'Title') {\n            setFiltered(props.listToFilter.filter(f => f.movieTitle.toLowerCase().includes(event.target.value)))\n        } else if (event.target.name === 'Rate') {\n            setFiltered(props.listToFilter.filter(f => f.movieRate.includes(event.target.value)))\n        }\n    }////////////////////// Filter End////////////////////\n\n\n    const cardsList = filtered.map(card => (\n\n        < Card\n            id={card.movieId}\n            title={card.movieTitle}\n            description={card.movieDescription}\n            rate={card.movieRate}\n            image={card.movieImage}\n            trailer={card.movieTrailer}\n        />\n\n    ))\n\n\n    return (\n        { cardsList }\n    )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,IAAI,MAAM,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,eAAe,SAASC,WAAWA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,KAAK,CAACU,QAAQ,CAACJ,KAAK,CAACK,YAAY,CAAC;EAElE,MAAMC,MAAM,GAAIC,KAAK,IAAK;IACtB,IAAIA,KAAK,CAACC,MAAM,CAACC,IAAI,KAAK,OAAO,EAAE;MAC/BN,WAAW,CAACH,KAAK,CAACK,YAAY,CAACK,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,UAAU,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,KAAK,CAACC,MAAM,CAACO,KAAK,CAAC,CAAC,CAAC;IACxG,CAAC,MAAM,IAAIR,KAAK,CAACC,MAAM,CAACC,IAAI,KAAK,MAAM,EAAE;MACrCN,WAAW,CAACH,KAAK,CAACK,YAAY,CAACK,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACK,SAAS,CAACF,QAAQ,CAACP,KAAK,CAACC,MAAM,CAACO,KAAK,CAAC,CAAC,CAAC;IACzF;EACJ,CAAC;;EAGD,MAAME,SAAS,GAAGf,QAAQ,CAACgB,GAAG,CAACC,IAAI,iBAE/BrB,OAAA,CAAEF,IAAI;IACFwB,EAAE,EAAED,IAAI,CAACE,OAAQ;IACjBC,KAAK,EAAEH,IAAI,CAACP,UAAW;IACvBW,WAAW,EAAEJ,IAAI,CAACK,gBAAiB;IACnCC,IAAI,EAAEN,IAAI,CAACH,SAAU;IACrBU,KAAK,EAAEP,IAAI,CAACQ,UAAW;IACvBC,OAAO,EAAET,IAAI,CAACU;EAAa;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAEJ,CAAC;EAGF,OACI;IAAEhB;EAAU,CAAC;AAErB;AAAChB,EAAA,CA7BuBF,WAAW;AAAAmC,EAAA,GAAXnC,WAAW;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}