{"ast":null,"code":"var _jsxFileName = \"/Users/zayneb/Documents/GoMyCode/ChPt5_React_Hooks/movies/src/components/Card.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Button, Card } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './card.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cards() {\n  _s();\n  const [cardData, setCardData] = useState({\n    image: '',\n    title: '',\n    description: '',\n    rate: ''\n  });\n  const inputRef = useRef(null);\n  const handleImageClick = () => {\n    inputRef.current.click();\n  };\n  const handleImageChange = event => {\n    const file = event.target.files[0];\n    console.log(file);\n    // setCardData(event.target.files[0])\n    setCardData(prevCardData => {\n      return {\n        ...prevCardData,\n        [event.target.name]: event.target.files[0]\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handleImageClick,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"image-input\",\n        children: cardData.image ? /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"upload-image\",\n          src: URL.createObjectURL(cardData.image),\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 42\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"upload-image\",\n          src: require('../images/upload.jpeg'),\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 126\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        ref: inputRef,\n        name: \"image\",\n        onChange: handleImageChange,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: \"\",\n      name: \"title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this)\n\n  //     <Card style={{ width: '18rem' }}>\n  //         <Card.Img variant=\"top\" src={require(`./images/${movie.posterURL}`)} />\n  //         <Card.Body>\n  //             <Card.Title>{movie.title}</Card.Title>\n  //             <Card.Text>{movie.description}</Card.Text>\n  //             <Card.Text>{movie.rating}</Card.Text>\n  //         </Card.Body>\n  //     </Card>\n  ;\n}\n_s(Cards, \"csUj2hOWC1wcwG3eRdt8SfXW5vA=\");\n_c = Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useState","useRef","Button","Card","jsxDEV","_jsxDEV","Cards","_s","cardData","setCardData","image","title","description","rate","inputRef","handleImageClick","current","click","handleImageChange","event","file","target","files","console","log","prevCardData","name","className","children","onClick","htmlFor","src","URL","createObjectURL","alt","fileName","_jsxFileName","lineNumber","columnNumber","require","type","ref","onChange","style","display","value","_c","$RefreshReg$"],"sources":["/Users/zayneb/Documents/GoMyCode/ChPt5_React_Hooks/movies/src/components/Card.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Button, Card } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './card.css'\n\nexport default function Cards() {\n    const [cardData, setCardData] = useState(\n        { image: '', title: '', description: '', rate: '', }\n    )\n    const inputRef = useRef(null)\n\n    const handleImageClick = () => {\n        inputRef.current.click()\n    }\n    const handleImageChange = (event) => {\n        const file = event.target.files[0];\n        console.log(file);\n        // setCardData(event.target.files[0])\n        setCardData(prevCardData => {\n            return {\n                ...prevCardData,\n                [event.target.name]: event.target.files[0]\n            }\n        })\n    }\n\n    return (\n        <div className='movie-card'>\n            <div onClick={handleImageClick}>\n                <label htmlFor='image-input'>\n                    {\n                        cardData.image ? <img className='upload-image' src={URL.createObjectURL(cardData.image)} alt='' /> : <img className='upload-image' src={require('../images/upload.jpeg')} alt='' />\n                    }\n                </label>\n\n                <input type='file'\n                    ref={inputRef}\n                    name='image'\n                    onChange={handleImageChange}\n                    style={{ display: 'none' }} />\n            </div>\n            <input type='text'\n                value=''\n                name='title' />\n\n        </div>\n\n\n\n\n        //     <Card style={{ width: '18rem' }}>\n        //         <Card.Img variant=\"top\" src={require(`./images/${movie.posterURL}`)} />\n        //         <Card.Body>\n        //             <Card.Title>{movie.title}</Card.Title>\n        //             <Card.Text>{movie.description}</Card.Text>\n        //             <Card.Text>{movie.rating}</Card.Text>\n        //         </Card.Body>\n        //     </Card>\n    )\n}\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,SAASC,MAAM,EAAEC,IAAI,QAAQ,iBAAiB;AAC9C,OAAO,sCAAsC;AAC7C,OAAO,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnB,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CACpC;IAAEU,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,WAAW,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAI,CACvD,CAAC;EACD,MAAMC,QAAQ,GAAGb,MAAM,CAAC,IAAI,CAAC;EAE7B,MAAMc,gBAAgB,GAAGA,CAAA,KAAM;IAC3BD,QAAQ,CAACE,OAAO,CAACC,KAAK,CAAC,CAAC;EAC5B,CAAC;EACD,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACjC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;IACjB;IACAX,WAAW,CAACgB,YAAY,IAAI;MACxB,OAAO;QACH,GAAGA,YAAY;QACf,CAACN,KAAK,CAACE,MAAM,CAACK,IAAI,GAAGP,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC;MAC7C,CAAC;IACL,CAAC,CAAC;EACN,CAAC;EAED,oBACIjB,OAAA;IAAKsB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACvBvB,OAAA;MAAKwB,OAAO,EAAEd,gBAAiB;MAAAa,QAAA,gBAC3BvB,OAAA;QAAOyB,OAAO,EAAC,aAAa;QAAAF,QAAA,EAEpBpB,QAAQ,CAACE,KAAK,gBAAGL,OAAA;UAAKsB,SAAS,EAAC,cAAc;UAACI,GAAG,EAAEC,GAAG,CAACC,eAAe,CAACzB,QAAQ,CAACE,KAAK,CAAE;UAACwB,GAAG,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGjC,OAAA;UAAKsB,SAAS,EAAC,cAAc;UAACI,GAAG,EAAEQ,OAAO,CAAC,uBAAuB,CAAE;UAACL,GAAG,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEpL,CAAC,eAERjC,OAAA;QAAOmC,IAAI,EAAC,MAAM;QACdC,GAAG,EAAE3B,QAAS;QACdY,IAAI,EAAC,OAAO;QACZgB,QAAQ,EAAExB,iBAAkB;QAC5ByB,KAAK,EAAE;UAAEC,OAAO,EAAE;QAAO;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACNjC,OAAA;MAAOmC,IAAI,EAAC,MAAM;MACdK,KAAK,EAAC,EAAE;MACRnB,IAAI,EAAC;IAAO;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAElB;;EAKL;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAER;AAAC/B,EAAA,CAtDuBD,KAAK;AAAAwC,EAAA,GAALxC,KAAK;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}