{"ast":null,"code":"var _jsxFileName = \"/Users/zayneb/Documents/GoMyCode/ChPt5_React_Hooks(movieApp)/movies/src/CardsList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Card from './Card';\nimport AddCard from './AddCard';\nimport './card.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CardsList(props) {\n  _s();\n  // ---------------------  Plus Card  ------------------------- //\n  const [PlusCLick, setPlusCLick] = useState(false);\n  function BlankCard(e) {\n    if (e.target.id === 'blankCard') {\n      setPlusCLick(true);\n    }\n  }\n  //  ---------------------------------------------------  //\n\n  const finalList = props.mesCards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n    title: card.movieTitle,\n    description: card.movieDescription,\n    rate: card.movieRate,\n    image: card.movieImage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-cards\",\n        children: [...finalList, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blankCard\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: require('./images/plus.png'),\n            id: \"blankCard\",\n            onClick: props.handleblankCard,\n            alt: \"plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(CardsList, \"9Vzbyh0emcXYmZW+p6rOaNXXe8A=\");\n_c = CardsList;\nvar _c;\n$RefreshReg$(_c, \"CardsList\");","map":{"version":3,"names":["React","useState","Card","AddCard","jsxDEV","_jsxDEV","Fragment","_Fragment","CardsList","props","_s","PlusCLick","setPlusCLick","BlankCard","e","target","id","finalList","mesCards","map","card","title","movieTitle","description","movieDescription","rate","movieRate","image","movieImage","fileName","_jsxFileName","lineNumber","columnNumber","children","className","src","require","onClick","handleblankCard","alt","_c","$RefreshReg$"],"sources":["/Users/zayneb/Documents/GoMyCode/ChPt5_React_Hooks(movieApp)/movies/src/CardsList.js"],"sourcesContent":["import React, { useState } from 'react'\nimport Card from './Card'\nimport AddCard from './AddCard'\nimport './card.css'\n\n\nexport default function CardsList(props) {\n\n    // ---------------------  Plus Card  ------------------------- //\n    const [PlusCLick, setPlusCLick] = useState(false)\n\n    function BlankCard(e) {\n        if (e.target.id === 'blankCard') {\n            setPlusCLick(true)\n        }\n    }\n    //  ---------------------------------------------------  //\n\n    const finalList = props.mesCards.map(card => (\n        <Card\n            title={card.movieTitle}\n            description={card.movieDescription}\n            rate={card.movieRate}\n            image={card.movieImage}\n        />\n    ))\n\n\n    return (\n\n        <>\n            <div className='container'>\n                <div className='movie-cards'>\n                    {/* {finalList} */}\n                    {[...finalList,\n                    <div className='blankCard' >\n                        <img src={require('./images/plus.png')} id='blankCard' onClick={props.handleblankCard} alt='plus' />\n                    </div>]}\n                </div>\n            </div >\n            {/* <AddCard handleAddCard={props.handleAdd} /> */}\n        </>\n    )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAO,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGnB,eAAe,SAASC,SAASA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAErC;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEjD,SAASY,SAASA,CAACC,CAAC,EAAE;IAClB,IAAIA,CAAC,CAACC,MAAM,CAACC,EAAE,KAAK,WAAW,EAAE;MAC7BJ,YAAY,CAAC,IAAI,CAAC;IACtB;EACJ;EACA;;EAEA,MAAMK,SAAS,GAAGR,KAAK,CAACS,QAAQ,CAACC,GAAG,CAACC,IAAI,iBACrCf,OAAA,CAACH,IAAI;IACDmB,KAAK,EAAED,IAAI,CAACE,UAAW;IACvBC,WAAW,EAAEH,IAAI,CAACI,gBAAiB;IACnCC,IAAI,EAAEL,IAAI,CAACM,SAAU;IACrBC,KAAK,EAAEP,IAAI,CAACQ;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CACJ,CAAC;EAGF,oBAEI3B,OAAA,CAAAE,SAAA;IAAA0B,QAAA,eACI5B,OAAA;MAAK6B,SAAS,EAAC,WAAW;MAAAD,QAAA,eACtB5B,OAAA;QAAK6B,SAAS,EAAC,aAAa;QAAAD,QAAA,EAEvB,CAAC,GAAGhB,SAAS,eACdZ,OAAA;UAAK6B,SAAS,EAAC,WAAW;UAAAD,QAAA,eACtB5B,OAAA;YAAK8B,GAAG,EAAEC,OAAO,CAAC,mBAAmB,CAAE;YAACpB,EAAE,EAAC,WAAW;YAACqB,OAAO,EAAE5B,KAAK,CAAC6B,eAAgB;YAACC,GAAG,EAAC;UAAM;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnG,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC,gBAET,CAAC;AAEX;AAACtB,EAAA,CArCuBF,SAAS;AAAAgC,EAAA,GAAThC,SAAS;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}