{"ast":null,"code":"var _jsxFileName = \"/Users/zayneb/Documents/GoMyCode/ChPt5_React_Hooks(movieApp)/movies/src/CardsList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Card from './Card';\nimport AddCard from './AddCard';\nimport { nanoid } from 'nanoid';\nimport { Link } from 'react-router-dom';\nimport './card.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CardsList(props) {\n  _s();\n  const [cards, setCards] = React.useState([{\n    movieId: nanoid(),\n    movieTitle: 'Interstellar',\n    movieDescription: 'When Earth becomes uninhabitable in the future, a farmer and ex-NASA pilot, Joseph Cooper, is tasked to pilot a spacecraft, along with a team of researchers, to find a new planet for humans.',\n    movieRate: '9',\n    movieImage: 'interstellar.jpeg',\n    movieTrailer: ''\n  }, {\n    movieId: nanoid(),\n    movieTitle: 'Inception',\n    movieDescription: \"Cobb steals information from his targets by entering their dreams. He is wanted for his alleged role in his wife's murder and his only chance at redemption is to perform a nearly impossible task.\",\n    movieRate: '7',\n    movieImage: 'inception.jpeg',\n    movieTrailer: ''\n  }, {\n    movieId: nanoid(),\n    movieTitle: 'Pride & prejudice',\n    movieDescription: 'Elizabeth Bennett is a strong-willed yet sensible young woman. At a local ball, she encounters a wealthy young man, Mr Fitzwilliam Darcy, who is arrogant, and they develop an unusual relationship.',\n    movieRate: '8',\n    movieImage: 'pride&prejudice.jpeg',\n    movieTrailer: ''\n  }]);\n  //  ---------------------------------------------------  //\n\n  // ---------------------  Plus Card  ------------------------- //\n  const [show, setShow] = useState(false);\n  function BlankCard(e) {\n    if (e.target.id === 'blankCard') {\n      setShow(true);\n    }\n    if (e.target.id === 'close') {\n      setShow(false);\n    }\n  }\n  //  ---------------------------------------------------  //\n\n  // ----------------------  finalList --------------------//\n  const finalList = cards.map(card => /*#__PURE__*/_jsxDEV(Link, {\n    to: `/movies/${card.movieId}`,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      id: card.movieId,\n      title: card.movieTitle,\n      description: card.movieDescription,\n      rate: card.movieRate,\n      image: card.movieImage,\n      trailer: card.movieTrailer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this));\n  //  ---------------------------------------------------  //\n  //  ------------------ add new Movie ------------------  //\n  const newCard = {\n    movieId: nanoid(),\n    movieTitle: '',\n    movieDescription: '',\n    movieRate: '',\n    movieImage: '',\n    movieTrailer: ' '\n  };\n  const add = function (titleAdded, descriptionAdded, rateAdded, imageAdded, trailerAdded) {\n    setFiltered([...filtered, {\n      ...newCard,\n      movieTitle: titleAdded,\n      movieDescription: descriptionAdded,\n      movieRate: rateAdded,\n      movieImage: imageAdded = imageAdded ? imageAdded : 'open.jpg',\n      movieTrailer: trailerAdded\n    }]);\n    setShow(false);\n  };\n  //  --------------------------------------------------- //\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: props.blurStyle,\n      children: [...finalList, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blankCard  card \",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: require('./images/plus.png'),\n          id: \"blankCard\",\n          onClick: props.handleBlankCard,\n          alt: \"plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), show ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(AddCard, {\n        handleSaveNewCard: add,\n        handleBlankCard: BlankCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CardsList, {\n        mesCards: filtered,\n        handleBlankCard: BlankCard,\n        blurStyle: {\n          filter: 'blur(3px)'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(CardsList, {\n      mesCards: filtered,\n      handleBlankCard: BlankCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true);\n}\n_s(CardsList, \"F7BTjwHmyXonxw1cjdkO6KG4GWQ=\");\n_c = CardsList;\nvar _c;\n$RefreshReg$(_c, \"CardsList\");","map":{"version":3,"names":["React","useEffect","useState","Card","AddCard","nanoid","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","CardsList","props","_s","cards","setCards","movieId","movieTitle","movieDescription","movieRate","movieImage","movieTrailer","show","setShow","BlankCard","e","target","id","finalList","map","card","to","children","title","description","rate","image","trailer","fileName","_jsxFileName","lineNumber","columnNumber","newCard","add","titleAdded","descriptionAdded","rateAdded","imageAdded","trailerAdded","setFiltered","filtered","className","style","blurStyle","src","require","onClick","handleBlankCard","alt","handleSaveNewCard","mesCards","filter","_c","$RefreshReg$"],"sources":["/Users/zayneb/Documents/GoMyCode/ChPt5_React_Hooks(movieApp)/movies/src/CardsList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Card from './Card'\nimport AddCard from './AddCard'\nimport { nanoid } from 'nanoid'\nimport { Link } from 'react-router-dom';\n\nimport './card.css'\n\n\nexport default function CardsList(props) {\n\n    const [cards, setCards] = React.useState([\n        {\n            movieId: nanoid(),\n            movieTitle: 'Interstellar',\n            movieDescription: 'When Earth becomes uninhabitable in the future, a farmer and ex-NASA pilot, Joseph Cooper, is tasked to pilot a spacecraft, along with a team of researchers, to find a new planet for humans.',\n            movieRate: '9',\n            movieImage: 'interstellar.jpeg',\n            movieTrailer: '',\n        },\n        {\n            movieId: nanoid(),\n            movieTitle: 'Inception',\n            movieDescription: \"Cobb steals information from his targets by entering their dreams. He is wanted for his alleged role in his wife's murder and his only chance at redemption is to perform a nearly impossible task.\",\n            movieRate: '7',\n            movieImage: 'inception.jpeg',\n            movieTrailer: '',\n        },\n        {\n            movieId: nanoid(),\n            movieTitle: 'Pride & prejudice',\n            movieDescription: 'Elizabeth Bennett is a strong-willed yet sensible young woman. At a local ball, she encounters a wealthy young man, Mr Fitzwilliam Darcy, who is arrogant, and they develop an unusual relationship.',\n            movieRate: '8',\n            movieImage: 'pride&prejudice.jpeg',\n            movieTrailer: '',\n        },\n\n\n    ])\n    //  ---------------------------------------------------  //\n\n    // ---------------------  Plus Card  ------------------------- //\n    const [show, setShow] = useState(false)\n\n\n    function BlankCard(e) {\n        if (e.target.id === 'blankCard') {\n            setShow(true)\n        }\n        if (e.target.id === 'close') {\n            setShow(false)\n        }\n    }\n    //  ---------------------------------------------------  //\n\n    // ----------------------  finalList --------------------//\n    const finalList = cards.map(card => (\n\n        <Link to={`/movies/${card.movieId}`}>\n            <Card\n                id={card.movieId}\n                title={card.movieTitle}\n                description={card.movieDescription}\n                rate={card.movieRate}\n                image={card.movieImage}\n                trailer={card.movieTrailer}\n            />\n        </Link>\n    ))\n    //  ---------------------------------------------------  //\n    //  ------------------ add new Movie ------------------  //\n    const newCard = {\n        movieId: nanoid(),\n        movieTitle: '',\n        movieDescription: '',\n        movieRate: '',\n        movieImage: '',\n        movieTrailer: ' ',\n    }\n\n    const add = function (titleAdded, descriptionAdded, rateAdded, imageAdded, trailerAdded) {\n        setFiltered([...filtered, { ...newCard, movieTitle: titleAdded, movieDescription: descriptionAdded, movieRate: rateAdded, movieImage: imageAdded = imageAdded ? imageAdded : 'open.jpg', movieTrailer: trailerAdded }])\n        setShow(false)\n    }\n    //  --------------------------------------------------- //\n\n\n    return (\n\n        <>\n            <div className='container' style={props.blurStyle}>\n\n                {/* {finalList} */}\n                {[...finalList,\n                <div className='blankCard  card '>\n                    <img src={require('./images/plus.png')} id='blankCard' onClick={props.handleBlankCard} alt='plus' />\n                </div>]}\n\n            </div >\n            {show ?\n                <>\n                    <AddCard handleSaveNewCard={add} handleBlankCard={BlankCard} />\n                    <CardsList mesCards={filtered} handleBlankCard={BlankCard} blurStyle={{ filter: 'blur(3px)' }} />\n                </>\n                : <CardsList mesCards={filtered} handleBlankCard={BlankCard} />\n            }\n\n        </>\n    )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}