{"ast":null,"code":"var _jsxFileName = \"/Users/zayneb/Documents/GoMyCode/ChPt5_React_Hooks(movieApp)/movies/src/CardsList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Card from './Card';\nimport AddCard from './AddCard';\nimport { nanoid } from 'nanoid';\nimport { Link, Outlet } from 'react-router-dom';\nimport FiltredList from './FiltredList';\nimport './card.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CardsList(props) {\n  _s();\n  const [cards, setCards] = React.useState([{\n    movieId: nanoid(),\n    movieTitle: 'Interstellar',\n    movieDescription: 'When Earth becomes uninhabitable in the future, a farmer and ex-NASA pilot, Joseph Cooper, is tasked to pilot a spacecraft, along with a team of researchers, to find a new planet for humans.',\n    movieRate: '9',\n    movieImage: 'interstellar.jpeg',\n    movieTrailer: 'https://www.youtube.com/embed/zSWdZVtXT7E?si=lCROTziC5OkXkTT4'\n  }, {\n    movieId: nanoid(),\n    movieTitle: 'Inception',\n    movieDescription: \"Cobb steals information from his targets by entering their dreams. He is wanted for his alleged role in his wife's murder and his only chance at redemption is to perform a nearly impossible task.\",\n    movieRate: '7',\n    movieImage: 'inception.jpeg',\n    movieTrailer: 'https://www.youtube.com/embed/YoHD9XEInc0?si=6OpmNXNnyb0U7InV'\n  }, {\n    movieId: nanoid(),\n    movieTitle: 'Pride & prejudice',\n    movieDescription: 'Elizabeth Bennett is a strong-willed yet sensible young woman. At a local ball, she encounters a wealthy young man, Mr Fitzwilliam Darcy, who is arrogant, and they develop an unusual relationship.',\n    movieRate: '8',\n    movieImage: 'pride&prejudice.jpeg',\n    movieTrailer: 'https://www.youtube.com/embed/Ur_DIHs92NM?si=D2rFoEcPI1jrWWDq'\n  }]);\n  //  ---------------------------------------------------  //\n\n  // --------------------- BlankCard  ------------------------- //\n  const [show, setShow] = useState(false);\n  function BlankCard(e) {\n    if (e.target.id === 'blankCard') {\n      setShow(true);\n    }\n    if (e.target.id === 'close') {\n      setShow(false);\n    }\n  }\n  ///////////////////// add new Movie ////////////////////\n  //  ---------------------------------------------------  //\n\n  // ----------------------  cardsList --------------------//\n\n  //  ---------------------------------------------------  //\n  // // ---------------------  Filter ------------------------- //\n\n  //  ---------------------------------------------------  //\n  const [newList, setNewList] = React.useState(cards);\n  //  ------------------ add new Movie ------------------  //\n  const newCard = {\n    movieId: nanoid(),\n    movieTitle: '',\n    movieDescription: '',\n    movieRate: '',\n    movieImage: '',\n    movieTrailer: ' '\n  };\n  const add = function (titleAdded, descriptionAdded, rateAdded, imageAdded, trailerAdded) {\n    setNewList(prevCards => {\n      return [...prevCards, {\n        ...newCard,\n        movieTitle: titleAdded,\n        movieDescription: descriptionAdded,\n        movieRate: rateAdded,\n        movieImage: imageAdded = imageAdded ? imageAdded : 'open.jpg',\n        movieTrailer: trailerAdded\n      }];\n    });\n    setShow(false);\n  };\n  console.log(newList);\n  const cardsList = newList.map(card => /*#__PURE__*/_jsxDEV(Card, {\n    id: card.movieId,\n    title: card.movieTitle,\n    description: card.movieDescription,\n    rate: card.movieRate,\n    image: card.movieImage,\n    trailer: card.movieTrailer\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this));\n\n  //  --------------------------------------------------- //\n  console.log(cardsList);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FiltredList, {\n      listtoFilter: newList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(CardsList, \"sSYr81Mj1Jby4brWB9+F9bupDnE=\");\n_c = CardsList;\nvar _c;\n$RefreshReg$(_c, \"CardsList\");","map":{"version":3,"names":["React","useEffect","useState","Card","AddCard","nanoid","Link","Outlet","FiltredList","jsxDEV","_jsxDEV","Fragment","_Fragment","CardsList","props","_s","cards","setCards","movieId","movieTitle","movieDescription","movieRate","movieImage","movieTrailer","show","setShow","BlankCard","e","target","id","newList","setNewList","newCard","add","titleAdded","descriptionAdded","rateAdded","imageAdded","trailerAdded","prevCards","console","log","cardsList","map","card","title","description","rate","image","trailer","fileName","_jsxFileName","lineNumber","columnNumber","children","listtoFilter","_c","$RefreshReg$"],"sources":["/Users/zayneb/Documents/GoMyCode/ChPt5_React_Hooks(movieApp)/movies/src/CardsList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Card from './Card'\nimport AddCard from './AddCard'\nimport { nanoid } from 'nanoid'\nimport { Link, Outlet } from 'react-router-dom';\nimport FiltredList from './FiltredList';\nimport './card.css'\n\n\nexport default function CardsList(props) {\n\n    const [cards, setCards] = React.useState([\n        {\n            movieId: nanoid(),\n            movieTitle: 'Interstellar',\n            movieDescription: 'When Earth becomes uninhabitable in the future, a farmer and ex-NASA pilot, Joseph Cooper, is tasked to pilot a spacecraft, along with a team of researchers, to find a new planet for humans.',\n            movieRate: '9',\n            movieImage: 'interstellar.jpeg',\n            movieTrailer: 'https://www.youtube.com/embed/zSWdZVtXT7E?si=lCROTziC5OkXkTT4',\n        },\n        {\n            movieId: nanoid(),\n            movieTitle: 'Inception',\n            movieDescription: \"Cobb steals information from his targets by entering their dreams. He is wanted for his alleged role in his wife's murder and his only chance at redemption is to perform a nearly impossible task.\",\n            movieRate: '7',\n            movieImage: 'inception.jpeg',\n            movieTrailer: 'https://www.youtube.com/embed/YoHD9XEInc0?si=6OpmNXNnyb0U7InV',\n        },\n        {\n            movieId: nanoid(),\n            movieTitle: 'Pride & prejudice',\n            movieDescription: 'Elizabeth Bennett is a strong-willed yet sensible young woman. At a local ball, she encounters a wealthy young man, Mr Fitzwilliam Darcy, who is arrogant, and they develop an unusual relationship.',\n            movieRate: '8',\n            movieImage: 'pride&prejudice.jpeg',\n            movieTrailer: 'https://www.youtube.com/embed/Ur_DIHs92NM?si=D2rFoEcPI1jrWWDq',\n        },\n\n\n    ])\n    //  ---------------------------------------------------  //\n\n    // --------------------- BlankCard  ------------------------- //\n    const [show, setShow] = useState(false)\n    function BlankCard(e) {\n        if (e.target.id === 'blankCard') {\n            setShow(true)\n        }\n        if (e.target.id === 'close') {\n            setShow(false)\n        }\n    }\n    ///////////////////// add new Movie ////////////////////\n    //  ---------------------------------------------------  //\n\n    // ----------------------  cardsList --------------------//\n\n    //  ---------------------------------------------------  //\n    // // ---------------------  Filter ------------------------- //\n\n    //  ---------------------------------------------------  //\n    const [newList, setNewList] = React.useState(cards)\n    //  ------------------ add new Movie ------------------  //\n    const newCard = {\n        movieId: nanoid(),\n        movieTitle: '',\n        movieDescription: '',\n        movieRate: '',\n        movieImage: '',\n        movieTrailer: ' ',\n    }\n\n    const add = function (titleAdded, descriptionAdded, rateAdded, imageAdded, trailerAdded) {\n        setNewList(prevCards => {\n            return [...prevCards, { ...newCard, movieTitle: titleAdded, movieDescription: descriptionAdded, movieRate: rateAdded, movieImage: imageAdded = imageAdded ? imageAdded : 'open.jpg', movieTrailer: trailerAdded }]\n        })\n        setShow(false)\n    }\n\n    console.log(newList)\n\n\n\n\n\n\n    const cardsList = newList.map(card => (\n\n        < Card\n            id={card.movieId}\n            title={card.movieTitle}\n            description={card.movieDescription}\n            rate={card.movieRate}\n            image={card.movieImage}\n            trailer={card.movieTrailer}\n        />\n\n    ))\n\n\n    //  --------------------------------------------------- //\n    console.log(cardsList)\n\n    return (\n        <>\n            <FiltredList listtoFilter={newList} />\n        </>\n\n    )\n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}